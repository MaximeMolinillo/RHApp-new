{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/worker.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction WorkerFormComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function WorkerFormComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"div\", 6)(5, \"div\", 7)(6, \"label\", 8);\n    i0.ɵɵtext(7, \"Nom\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 9, 10);\n    i0.ɵɵlistener(\"ngModelChange\", function WorkerFormComponent_form_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.worker.personne.nom = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 11);\n    i0.ɵɵtext(11, \" Nom erron\\u00E9 ou vide \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 12);\n    i0.ɵɵtext(14, \"Pr\\u00E9nom\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 13, 14);\n    i0.ɵɵlistener(\"ngModelChange\", function WorkerFormComponent_form_0_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.worker.personne.prenom = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 11);\n    i0.ɵɵtext(18, \" Prenom erron\\u00E9 ou vide \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 7)(20, \"div\", 7)(21, \"label\", 15);\n    i0.ɵɵtext(22, \"Sexe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"input\", 16, 17);\n    i0.ɵɵlistener(\"ngModelChange\", function WorkerFormComponent_form_0_Template_input_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.worker.personne.Sexe = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 11);\n    i0.ɵɵtext(26, \" Sexe erron\\u00E9 ou vide \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"div\", 7)(28, \"label\", 18);\n    i0.ɵɵtext(29, \"Date de naissance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"input\", 19, 20);\n    i0.ɵɵlistener(\"ngModelChange\", function WorkerFormComponent_form_0_Template_input_ngModelChange_30_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.worker.personne.date = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 11);\n    i0.ɵɵtext(33, \" Date de naissance erron\\u00E9 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 7)(35, \"label\", 21);\n    i0.ɵɵtext(36, \"Identifiant\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"input\", 22, 20);\n    i0.ɵɵlistener(\"ngModelChange\", function WorkerFormComponent_form_0_Template_input_ngModelChange_37_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.worker.personne.identifiant = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 11);\n    i0.ɵɵtext(40, \" Identifiant erron\\u00E9 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\", 7)(42, \"label\", 23);\n    i0.ɵɵtext(43, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"input\", 24, 20);\n    i0.ɵɵlistener(\"ngModelChange\", function WorkerFormComponent_form_0_Template_input_ngModelChange_44_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.worker.personne.type = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(46, \"div\", 11);\n    i0.ɵɵtext(47, \" Type erron\\u00E9 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"div\", 7)(49, \"label\", 25);\n    i0.ɵɵtext(50, \"Job\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"input\", 26, 20);\n    i0.ɵɵlistener(\"ngModelChange\", function WorkerFormComponent_form_0_Template_input_ngModelChange_51_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.worker.personne.job = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(53, \"div\", 11);\n    i0.ɵɵtext(54, \" Job erron\\u00E9 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(55, \"div\", 27);\n    i0.ɵɵelementStart(56, \"div\", 28)(57, \"button\", 29);\n    i0.ɵɵtext(58, \" Valider\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(1);\n    const _r3 = i0.ɵɵreference(9);\n    const _r4 = i0.ɵɵreference(16);\n    const _r5 = i0.ɵɵreference(24);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.worker.personne.nom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", _r3.valid || _r3.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.worker.personne.prenom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", _r4.valid || _r4.pristine);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.worker.personne.Sexe);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", _r5.valid || _r5.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.worker.personne.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.date.valid || ctx_r0.date.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.worker.personne.identifiant);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.identifiant.valid || ctx_r0.identifiant.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.worker.personne.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.type.valid || ctx_r0.type.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.worker.personne.job);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.job.valid || ctx_r0.job.pristine);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !_r2.form.valid);\n  }\n}\nfunction WorkerFormComponent_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 30);\n    i0.ɵɵtext(1, \"Aucune salari\\u00E9 \\u00E0 modifier...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class WorkerFormComponent {\n  constructor(workerSrv, router) {\n    this.workerSrv = workerSrv;\n    this.router = router;\n  }\n  // ngOnInit(): void {\n  //   this.workerService.getWorkerList().subscribe(resultat=> {this.workers$= resultat});\n  //   console.log(this.workers$!);\n  // }\n  // worker.personne.nom\n  onSubmit() {\n    if (this.worker.personne.id == undefined) {\n      this.worker.id = this.workerSrv.getParticipants().length + 1;\n      this.workerSrv.getParticipants().push(this.worker);\n      this.router.navigate(['participants']);\n    } else {\n      this.router.navigate(['participant', this.worker.id]);\n    }\n  }\n  static #_ = this.ɵfac = function WorkerFormComponent_Factory(t) {\n    return new (t || WorkerFormComponent)(i0.ɵɵdirectiveInject(i1.WorkerService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkerFormComponent,\n    selectors: [[\"app-worker-form\"]],\n    inputs: {\n      worker: \"worker\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"center\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"participantForm\", \"ngForm\"], [1, \"row\"], [1, \"col\", \"s8\", \"offset-s2\"], [1, \"card-panel\"], [1, \"form-group\"], [\"for\", \"nom\"], [\"type\", \"text\", \"required\", \"\", \"pattern\", \"[a-zA-Z ]*\", \"name\", \"nom\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"nom\", \"ngModel\"], [1, \"card-panel\", \"red\", \"accent-1\", 3, \"hidden\"], [\"for\", \"prenom\"], [\"type\", \"text\", \"required\", \"\", \"name\", \"prenom\", \"pattern\", \"[a-zA-Z ]*\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"prenom\", \"ngModel\"], [\"for\", \"Sexe\"], [\"type\", \"text\", \"required\", \"\", \"name\", \"Sexe\", \"pattern\", \"[a-zA-Z ]*\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"Sexe\", \"ngModel\"], [\"for\", \"date\"], [\"type\", \"date\", \"pattern\", \"^[0-9]{1,2}$\", \"name\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"age\", \"ngModel\"], [\"for\", \"identifiant\"], [\"type\", \"text\", \"pattern\", \"^[0-9]{1,2}$\", \"name\", \"identifiant\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"type\", \"text\", \"pattern\", \"^[0-9]{1,2}$\", \"name\", \"type\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"job\"], [\"type\", \"text\", \"pattern\", \"^[0-9]{1,2}$\", \"name\", \"job\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"divider\"], [1, \"section\", \"center\"], [\"type\", \"submit\", 1, \"waves-effect\", \"waves-light\", \"btn\", 3, \"disabled\"], [1, \"center\"]],\n    template: function WorkerFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, WorkerFormComponent_form_0_Template, 59, 15, \"form\", 0);\n        i0.ɵɵtemplate(1, WorkerFormComponent_h3_1_Template, 2, 0, \"h3\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.worker);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.worker);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","WorkerFormComponent","constructor","workerSrv","router","onSubmit","worker","personne","id","undefined","getParticipants","length","push","navigate","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\max_2\\Desktop\\angular\\RHApp-new\\src\\app\\worker-form\\worker-form.component.html","C:\\Users\\max_2\\Desktop\\angular\\RHApp-new\\src\\app\\worker-form\\worker-form.component.ts"],"sourcesContent":["<form *ngIf=\"worker\" (ngSubmit)=\"onSubmit()\" #participantForm=\"ngForm\">\n    <div class=\"row\">\n        <div class=\"col s8 offset-s2\">\n            <div class=\"card-panel\">\n                <!-- Nom -->\n                <div class=\"form-group\">\n                    <label for=\"nom\">Nom</label>\n                    <input type=\"text\" class=\"form-control\" required pattern=\"[a-zA-Z ]*\" [(ngModel)]=\"worker.personne.nom\"\n                        #nom=\"ngModel\" name=\"nom\">\n                </div>\n                <div [hidden]=\"nom.valid || nom.pristine\" class=\"card-panel red accent-1\">\n                    Nom erroné ou vide\n                </div>\n\n                <!-- Prenom -->\n                <div class=\"form-group\">\n                    <label for=\"prenom\">Prénom</label>\n                    <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"worker.personne.prenom\" #prenom=\"ngModel\"\n                        name=\"prenom\" pattern=\"[a-zA-Z ]*\">\n                </div>\n                <div [hidden]=\"prenom.valid || prenom.pristine\" class=\"card-panel red accent-1\">\n                    Prenom erroné ou vide\n                </div>\n\n\n                <!-- Sexe -->\n                <div class=\"form-group\">\n                    <div class=\"form-group\">\n                        <label for=\"Sexe\">Sexe</label>\n                        <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"worker.personne.Sexe\" #Sexe=\"ngModel\"\n                            name=\"Sexe\" pattern=\"[a-zA-Z ]*\">\n                    </div>\n                    <div [hidden]=\"Sexe.valid || Sexe.pristine\" class=\"card-panel red accent-1\">\n                        Sexe erroné ou vide\n                    </div>\n                </div>\n\n                <!-- Date de naissance -->\n                <div class=\"form-group\">\n                    <label for=\"date\">Date de naissance</label>\n                    <input type=\"date\" class=\"form-control\" pattern=\"^[0-9]{1,2}$\"\n                        [(ngModel)]=\"worker.personne.date\" #age=\"ngModel\" name=\"date\">\n                </div>\n                <div [hidden]=\"date.valid || date.pristine\" class=\"card-panel red accent-1\">\n                    Date de naissance erroné\n                </div>\n\n                <!-- Identifiant -->\n                <div class=\"form-group\">\n                    <label for=\"identifiant\">Identifiant</label>\n                    <input type=\"text\" class=\"form-control\" pattern=\"^[0-9]{1,2}$\"\n                        [(ngModel)]=\"worker.personne.identifiant\" #age=\"ngModel\" name=\"identifiant\">\n                </div>\n                <div [hidden]=\"identifiant.valid || identifiant.pristine\" class=\"card-panel red accent-1\">\n                    Identifiant erroné\n                </div>\n\n                <!-- Type -->\n                <div class=\"form-group\">\n                    <label for=\"type\">Type</label>\n                    <input type=\"text\" class=\"form-control\" pattern=\"^[0-9]{1,2}$\"\n                        [(ngModel)]=\"worker.personne.type\" #age=\"ngModel\" name=\"type\">\n                </div>\n                <div [hidden]=\"type.valid || type.pristine\" class=\"card-panel red accent-1\">\n                    Type erroné\n                </div>\n\n                <!-- JOb -->\n                <div class=\"form-group\">\n                    <label for=\"job\">Job</label>\n                    <input type=\"text\" class=\"form-control\" pattern=\"^[0-9]{1,2}$\"\n                        [(ngModel)]=\"worker.personne.job\" #age=\"ngModel\" name=\"job\">\n                </div>\n                <div [hidden]=\"job.valid || job.pristine\" class=\"card-panel red accent-1\">\n                    Job erroné\n                </div>\n\n                <!-- Submit button -->\n                <div class=\"divider\"></div>\n                <div class=\"section center\">\n                    <button type=\"submit\" class=\"waves-effect waves-light btn\" [disabled]=\"!participantForm.form.valid\">\n                        Valider</button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</form>\n<h3 *ngIf=\"!worker\" class=\"center\">Aucune salarié à modifier...</h3>","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WorkerService } from '../core/services/worker.service';\n// import { Worker } from '../core/services/worker.service';\nimport { Worker } from \"../core/models/worker.model\";\n@Component({\n  selector: 'app-worker-form',\n  templateUrl: './worker-form.component.html',\n  styleUrls: ['./worker-form.component.scss']\n})\nexport class WorkerFormComponent {\n@Input() worker: Worker | undefined;\n\nconstructor(\n  private workerSrv: WorkerService,\n  private router: Router,\n){}\n\n// ngOnInit(): void {\n//   this.workerService.getWorkerList().subscribe(resultat=> {this.workers$= resultat});\n//   console.log(this.workers$!);\n// }\n\n// worker.personne.nom\n  onSubmit(){\n    if(this.worker.personne.id == undefined){\n      this.worker.id = this.workerSrv.getParticipants().length+1;\n      this.workerSrv.getParticipants().push(this.worker)\n      this.router.navigate(['participants',]);\n    } else {\n      this.router.navigate(['participant',this.worker.id]);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}