{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/max_2/Desktop/angular/RHApp-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class AuthComponent {\n  constructor(autSrv, router) {\n    this.autSrv = autSrv;\n    this.router = router;\n    this.message = 'Déconnecté';\n  }\n  // ngOnInit(): void {\n  //   throw new Error('Method not implemented.');\n  // }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log(\"strin\");\n      yield (yield _this.autSrv.login({\n        username: _this.username,\n        password: _this.password\n      })).subscribe(isLoged => {\n        if (isLoged === true) {\n          _this.router.navigate(['api/personnes']);\n        } else {\n          _this.message = 'Utilisateur ou mot de passe incorrect';\n        }\n      });\n      // const isLogged = this.autSrv.login(this.username, this.password);\n      // if (isLogged) {\n      //   this.router.navigate(['worker']);\n      // } else {\n      //   this.message = 'Utilisateur ou mot de passe incorect';\n      // }\n    })();\n  }\n  static #_ = this.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[1, \"row\"], [1, \"col\", \"s12\", \"m4\", \"offset-m4\"], [1, \"card\", \"hoverable\"], [1, \"card-content\", \"center\"], [1, \"card-title\"], [\"loginForm\", \"ngForm\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card-action\", \"center\"], [3, \"disabled\", \"click\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n        i0.ɵɵtext(5, \"Page de connexion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", null, 5)(10, \"div\")(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 10)(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_19_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(20, \"Se connecter\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.message);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;AASA,OAAM,MAAOA,aAAa;EAMxBC,YACUC,MAAmB,EACnBC,MAAc;IADd,WAAM,GAAND,MAAM;IACN,WAAM,GAANC,MAAM;IALhB,YAAO,GAAW,YAAY;EAM3B;EAOH;EACA;EACA;EAEMC,KAAK;IAAA;IAAA;MACbC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MAEhB,MAAM,OAAQ,KAAI,CAACJ,MAAM,CAACE,KAAK,CAAC;QAAEG,QAAQ,EAAE,KAAI,CAACA,QAAQ;QAAEC,QAAQ,EAAE,KAAI,CAACA;MAAQ,CAAE,CAAC,EAAGC,SAAS,CAACC,OAAO,IAAG;QAE1G,IAAGA,OAAO,KAAK,IAAI,EAAC;UAClB,KAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;SACxC,MAAM;UACL,KAAI,CAACC,OAAO,GAAE,uCAAuC;;MAE3D,CAAC,CAAC;MACA;MACA;MACA;MAEA;MACA;MACA;IAAA;EACF;EAAC;qBAtCUZ,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAa;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT1BC,8BAAiB;QAIgBA,iCAAiB;QAAAA,iBAAO;QACjDA,yBAAG;QAAAA,YAAW;QAAAA,iBAAI;QAClBA,qCAA0B;QAEAA,sBAAK;QAAAA,iBAAQ;QACnCA,iCAAiF;QAAhCA;UAAA;QAAA,EAAsB;QAAvEA,iBAAiF;QAGnFA,4BAAK;QACmBA,6BAAY;QAAAA,iBAAQ;QAC1CA,iCAAqF;QAAhCA;UAAA;QAAA,EAAsB;QAA3EA,iBAAqF;QAEvFA,gCAAgC;QACaA;UAAA,OAASC,WAAO;QAAA,EAAC;QAACD,6BAAY;QAAAA,iBAAS;;;;QAZnFA,eAAW;QAAXA,iCAAW;QAIuCA,eAAsB;QAAtBA,sCAAsB;QAKlBA,eAAsB;QAAtBA,sCAAsB;QAGnEA,eAAkC;QAAlCA,0CAAkC","names":["AuthComponent","constructor","autSrv","router","login","console","log","username","password","subscribe","isLoged","navigate","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\max_2\\Desktop\\angular\\RHApp-new\\src\\app\\auth\\auth.component.ts","C:\\Users\\max_2\\Desktop\\angular\\RHApp-new\\src\\app\\auth\\auth.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent  {\r\n  password!: string  ;\r\n  username!: string;\r\n  message: string = 'Déconnecté';\r\n \r\n \r\n  constructor(\r\n    private autSrv: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // ngOnInit(): void {\r\n  //   throw new Error('Method not implemented.');\r\n  // }\r\n\r\n  async login() {\r\nconsole.log(\"strin\");\r\n\r\n    await (await (this.autSrv.login({ username: this.username, password: this.password }))).subscribe(isLoged => {\r\n\r\n      if(isLoged === true){\r\n        this.router.navigate(['api/personnes']);  \r\n      } else {\r\n        this.message ='Utilisateur ou mot de passe incorrect';\r\n      }   \r\n  });\r\n    // const isLogged = this.autSrv.login(this.username, this.password);\r\n    // if (isLogged) {\r\n    //   this.router.navigate(['worker']);\r\n\r\n    // } else {\r\n    //   this.message = 'Utilisateur ou mot de passe incorect';\r\n    // }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col s12 m4 offset-m4\"> \r\n      <div class=\"card hoverable\">      \r\n      <div class=\"card-content center\">\r\n        <span class=\"card-title\">Page de connexion</span>\r\n        <p>{{message}}</p>\r\n        <form #loginForm=\"ngForm\">\r\n          <div> \r\n            <label for=\"username\">Login</label>\r\n            <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"username\" required>\r\n          </div>\r\n          \r\n          <div> \r\n            <label for=\"password\">Mot de passe</label>\r\n            <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\r\n          </div>\r\n          <div class=\"card-action center\">\r\n            <button [disabled]=\"!loginForm.form.valid\" (click)=\"login()\">Se connecter</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}