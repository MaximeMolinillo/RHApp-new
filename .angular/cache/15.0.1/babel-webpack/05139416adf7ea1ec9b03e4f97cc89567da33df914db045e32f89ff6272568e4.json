{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'content-type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n};\nexport class WorkerService {\n  constructor(http) {\n    this.http = http;\n  }\n  //Liste travailleur\n  getWorkerList() {\n    return this.http.get('http://localhost:3000/api/personnes');\n  }\n  //Creation\n  createWorker(worker) {\n    console.log(worker);\n    return this.http.post('http://localhost:3000/api/personnes', worker, httpOptions);\n  }\n  //Delete\n  deleteWorker(workerId) {\n    return this.http.delete('http://localhost:3000/api/personnes');\n  }\n  // //mise à jour\n  updateWorker(worker, workerId) {\n    return this.http.put(`http://localhost:3000/api/personne/${workerId}`, worker, httpOptions);\n  }\n  // Travailleur par ID\n  getWorkerById(workerId) {\n    return this.http.get(`http://localhost:3000/api/personne/${workerId}`, httpOptions);\n  }\n  static #_ = this.ɵfac = function WorkerService_Factory(t) {\n    return new (t || WorkerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkerService,\n    factory: WorkerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,WAAW,GAAG;EAChBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACrB,cAAc,EAAE,kBAAkB;IAClC,6BAA6B,EAAE;GAClC;CACJ;AAKD,OAAM,MAAOG,aAAa;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAGxC;EACAC,aAAa;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,qCAAqC,CAAC;EACpE;EAEA;EACAC,YAAY,CAACC,MAAc;IACvBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAO,IAAI,CAACJ,IAAI,CAACO,IAAI,CAAC,qCAAqC,EAAEH,MAAM,EAAER,WAAW,CAAC;EACrF;EAEA;EACAY,YAAY,CAACC,QAAgB;IACzB,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAAM,qCAAqC,CAAC;EACvE;EAEA;EACAC,YAAY,CAACP,MAAc,EAAEK,QAAgB;IACzC,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAC,sCAAsCH,QAAQ,EAAE,EAAEL,MAAM,EAAER,WAAW,CAAC;EAC/F;EAEA;EACAiB,aAAa,CAACJ,QAAgB;IAC1B,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAM,sCAAsCO,QAAQ,EAAE,EAAGb,WAAW,CAAC;EAC7F;EAAC;qBA5BQE,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAgB,SAAbhB,aAAa;IAAAiB,YAHV;EAAM","names":["HttpHeaders","httpOptions","headers","WorkerService","constructor","http","getWorkerList","get","createWorker","worker","console","log","post","deleteWorker","workerId","delete","updateWorker","put","getWorkerById","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\max_2\\Desktop\\angular\\RHApp-new\\src\\app\\core\\services\\worker.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Worker } from \"../models/worker.model\";\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'content-type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n    })\r\n}\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class WorkerService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    //Liste travailleur\r\n    getWorkerList(): Observable<any> {\r\n        return this.http.get<any>('http://localhost:3000/api/personnes');\r\n    }\r\n\r\n    //Creation\r\n    createWorker(worker: Worker): Observable<any> {\r\n        console.log(worker);\r\n        return this.http.post('http://localhost:3000/api/personnes', worker, httpOptions);\r\n    }\r\n\r\n    //Delete\r\n    deleteWorker(workerId: number): Observable<any> {\r\n        return this.http.delete<any>('http://localhost:3000/api/personnes');\r\n    }\r\n\r\n    // //mise à jour\r\n    updateWorker(worker: Worker, workerId: number): Observable<any> {\r\n        return this.http.put(`http://localhost:3000/api/personne/${workerId}`, worker, httpOptions);\r\n    }\r\n\r\n    // Travailleur par ID\r\n    getWorkerById(workerId: number): Observable<any> {\r\n        return this.http.get<any>(`http://localhost:3000/api/personne/${workerId}` , httpOptions);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}